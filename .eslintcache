[{"/home/hcchan/Documents/landingpage/src/index.tsx":"1","/home/hcchan/Documents/landingpage/src/App.tsx":"2","/home/hcchan/Documents/landingpage/src/postlogin/Lobby.tsx":"3","/home/hcchan/Documents/landingpage/src/prelogin/Landingpage.tsx":"4","/home/hcchan/Documents/landingpage/src/AppState.ts":"5"},{"size":680,"mtime":1609770514250,"results":"6","hashOfConfig":"7"},{"size":1670,"mtime":1609771798570,"results":"8","hashOfConfig":"7"},{"size":3559,"mtime":1609770758047,"results":"9","hashOfConfig":"7"},{"size":4462,"mtime":1609785661097,"results":"10","hashOfConfig":"7"},{"size":2429,"mtime":1609770335850,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g9vosg",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hcchan/Documents/landingpage/src/index.tsx",[],"/home/hcchan/Documents/landingpage/src/App.tsx",["24"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { observer } from \"mobx-react\";\nimport Landingpage from \"./prelogin/Landingpage\"\nimport Lobby from \"./postlogin/Lobby\"\nimport {\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { RouteProps } from \"react-router\";\nimport { AppState } from \"./AppState\";\n\nimport \"./antd-theme.less\";\nimport 'antd/dist/antd.css';\n\ninterface PrivateRouteProps extends RouteProps {\n    loggedIn: boolean\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ loggedIn, children, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                loggedIn ? (\n                    children\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/\",\n                                state: { from: location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n};\n\nconst App = observer(({ appState }: { appState: AppState }) => {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Landingpage appState={appState} />\n            </Route>\n            { /* Authenticated routes are nested under `/bo`, and handled by the main component */}\n            <PrivateRoute loggedIn={appState.isLoggedIn()} path=\"/lobby\">\n                <Lobby appState={appState} />\n            </PrivateRoute>\n\n            { /* Something else?! */}\n            <Route path=\"*\">\n                <p>Page not found :(</p>\n            </Route>\n        </Switch>\n    );\n});\n\nexport default App;\n","/home/hcchan/Documents/landingpage/src/postlogin/Lobby.tsx",["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from 'react';\nimport logo from \"../resources/logo.png\";\n\nimport T_doller_icon from \"../resources/T_doller_icon.png\";\nimport refresh from \"../resources/refresh.png\";\nimport usericon from \"../resources/usericon.png\";\nimport volume from \"../resources/volume.png\";\nimport menu from \"../resources/menu.png\";\nimport bg from \"../resources/lobby-BG.png\"\nimport ALL from \"../resources/all.png\";\nimport BACCARAT from \"../resources/BACCARAT.png\";\nimport ROULETTE from \"../resources/ROULETTE.png\";\nimport DT from \"../resources/DT.png\";\nimport AUTOBETBACCARAT from \"../resources/AUTOBETBACCARAT.png\";\nimport SLOTGAME from \"../resources/slotgame.png\";\nimport FISHING from \"../resources/fishinmg.png\";\n\nimport { Modal, Typography } from 'antd';\nimport { observer } from 'mobx-react';\nimport { AppState } from '../AppState';\n\nconst LandingPage = observer(({ appState }: { appState: AppState }) => {\n    return (\n        <div style={{ width: \"100%\", backgroundImage: `url(${bg})`, backgroundSize: \"cover\" }}>\n            <div style={{ background: \"#4cd6c7\" }}>\n                <div style={{ display: \"flex\", placeContent: \"flex-end\" }}>\n                    <img src={T_doller_icon} style={{ margin: \"1rem\", blockSize: \"30px\" }}></img>\n                    <Typography style={{ color: \"white\", alignSelf: \"center\" }}>$123,234,342</Typography>\n                    <img src={refresh} style={{ margin: \"1rem\", blockSize: \"30px\" }}></img>\n                    <img src={usericon} style={{ margin: \"1rem\", blockSize: \"30px\" }}></img>\n                    <img src={volume} style={{ margin: \"1rem\", blockSize: \"30px\" }}></img>\n                    <img src={menu} style={{ margin: \"1rem\", blockSize: \"30px\" }}></img>\n                </div>\n            </div>\n            <div style={{ display: \"flex\", margin: \"1rem\", placeContent: \"center\" }}>\n                <div style={{ textAlign: \"center\", padding: \"0 30px\", borderRight: \"1px solid #4cd6c7\" }}>\n                    <img src={ALL}></img>\n                    <Typography><b>ALL PROVIDERS</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={BACCARAT} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>BACCARAT</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={ROULETTE} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>ROULETTE</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={DT} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>DRAGON TIGER</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={AUTOBETBACCARAT} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>AUTOBET BACCARAT</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={SLOTGAME} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>SLOT GAME</b></Typography>\n                </div>\n\n                <div style={{ textAlign: \"center\", padding: \"0 30px\" }}>\n                    <img src={FISHING} style={{ margin: \"9px\" }}></img>\n                    <Typography><b>FISHING GAME</b></Typography>\n                </div>\n            </div>\n        </div>\n    )\n});\n\n\nexport default LandingPage;\n","/home/hcchan/Documents/landingpage/src/prelogin/Landingpage.tsx",["40"],"/home/hcchan/Documents/landingpage/src/AppState.ts",["41","42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},{"ruleId":"43","severity":1,"message":"48","line":18,"column":10,"nodeType":"45","messageId":"46","endLine":18,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":27,"column":21,"nodeType":"51","endLine":27,"endColumn":92},{"ruleId":"49","severity":1,"message":"50","line":29,"column":21,"nodeType":"51","endLine":29,"endColumn":86},{"ruleId":"49","severity":1,"message":"50","line":30,"column":21,"nodeType":"51","endLine":30,"endColumn":87},{"ruleId":"49","severity":1,"message":"50","line":31,"column":21,"nodeType":"51","endLine":31,"endColumn":85},{"ruleId":"49","severity":1,"message":"50","line":32,"column":21,"nodeType":"51","endLine":32,"endColumn":83},{"ruleId":"49","severity":1,"message":"50","line":37,"column":21,"nodeType":"51","endLine":37,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":42,"column":21,"nodeType":"51","endLine":42,"endColumn":67},{"ruleId":"49","severity":1,"message":"50","line":47,"column":21,"nodeType":"51","endLine":47,"endColumn":67},{"ruleId":"49","severity":1,"message":"50","line":52,"column":21,"nodeType":"51","endLine":52,"endColumn":61},{"ruleId":"49","severity":1,"message":"50","line":57,"column":21,"nodeType":"51","endLine":57,"endColumn":74},{"ruleId":"49","severity":1,"message":"50","line":62,"column":21,"nodeType":"51","endLine":62,"endColumn":67},{"ruleId":"49","severity":1,"message":"50","line":67,"column":21,"nodeType":"51","endLine":67,"endColumn":66},{"ruleId":"43","severity":1,"message":"52","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"53","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":74,"column":31,"nodeType":"56","messageId":"57","endLine":74,"endColumn":33},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'trynow' is defined but never used.","'packageJson' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]